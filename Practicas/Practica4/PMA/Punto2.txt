2. Se desea modelar el funcionamiento de un banco en el cual existen 5 cajas para realizar
pagos. 

Existen P clientes que desean hacer un pago. Para esto, cada una selecciona la caja
donde hay menos personas esperando; una vez seleccionada, espera a ser atendido. 
En cada caja, los clientes son atendidos por orden de llegada por los cajeros. Luego del pago, se les
entrega un comprobante. Nota: maximizando la concurrencia.


chan llegada(int);
chan termine(int);
chan ColaMasCorta[N](int);
chan caja[5](int);
chan comprobante[N](comprobante);

Process Coordinador{ 
    Array Contador[5] = ([5],0)
    id sig;
    int idE;
    while (true){ 
        receive HayPedido();
        if not(empty (termine)) =>
            receive termine(idCola)
            Contador[idCola]--;
        not(empty(llegada)) =>
            receive llegada(idE);
            i = minIndex(Contador)
            send ColaMasCorta[ide](i)
            Contador[i]++;
    };
}

Process Cajero[id: 1..5]{ 
    int idC;
    comprobante_text;
    while (true){ 
        receive caja[id](idC)
        generarComprobante(comprobante_text);
        send comprobante[idC](comprobante_text);
    };
}

Process Cliente[id: 1..N]{
    comprobante:text;
    send llegada( id );
    send HayPedido();
    receive ColaMasCorta[id](fila);
    //Usando cajero
    send caja[fila](id);
    receive comprobante[id](comprobante)
    send termine(fila)
    send HayPedido()
}